<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>eu.fair4health</groupId>
  <artifactId>ppddm</artifactId>
  <version>1.1.0</version>
  <packaging>pom</packaging>

  <name>FAIR4Health PPDDM</name>
  <description>The modules of the FAIR4Health Privacy-Preserving Distributed Data Mining Implementation</description>
  <url>https://www.fair4health.eu/</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <modules>
    <module>ppddm-core</module>
    <module>ppddm-agent</module>
    <module>ppddm-manager</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <java.version>11</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <!-- dependency versions -->
    <ppddm.version>1.1.0</ppddm.version>
    <scala.binary.version>2.12</scala.binary.version>
    <scala.version>2.12.10</scala.version>
    <spark.version>3.0.1</spark.version>
    <scala-logging.version>3.9.2</scala-logging.version>
    <typesafe.config.version>1.4.0</typesafe.config.version>
    <akka.version>2.6.3</akka.version>
    <akka.http.version>10.1.11</akka.http.version>
    <json4s.version>3.7.0-M4</json4s.version>
    <mongo.driver.version>4.0.4</mongo.driver.version>
    <mongo.embedded.version>2.2.0</mongo.embedded.version>
    <onfhir.version>3.1-SNAPSHOT</onfhir.version>
    <zt.zip.version>1.14</zt.zip.version>
    <specs2.version>4.3.1</specs2.version>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Allows compiling/testing/running/documenting Scala code in Maven. -->
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>4.3.1</version>
          <configuration>
            <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
          </configuration>
          <executions>
            <execution>
              <id>scala-compile-first</id>
              <phase>process-resources</phase>
              <goals>
                <goal>add-source</goal>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>scala-test-compile</id>
              <phase>process-test-resources</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
      </plugins>
    </pluginManagement>

  </build>

  <dependencyManagement>
    <dependencies>
      <!-- Scala Language -->
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>

      <!-- FAIR4Health PPDDM -->
      <dependency>
        <groupId>eu.fair4health</groupId>
        <artifactId>ppddm-core</artifactId>
        <version>${ppddm.version}</version>
      </dependency>

      <!-- Apache Spark -->
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-mllib_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>

      <!-- Scala Logging -->
      <dependency>
        <groupId>com.typesafe.scala-logging</groupId>
        <artifactId>scala-logging_${scala.binary.version}</artifactId>
        <version>${scala-logging.version}</version>
      </dependency>

      <!-- Application Configuration -->
      <dependency>
        <groupId>com.typesafe</groupId>
        <artifactId>config</artifactId>
        <version>${typesafe.config.version}</version>
      </dependency>

      <!-- Akka HTTP Suite -->
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-actor_${scala.binary.version}</artifactId>
        <version>${akka.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-http_${scala.binary.version}</artifactId>
        <version>${akka.http.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-stream_${scala.binary.version}</artifactId>
        <version>${akka.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-http-caching_${scala.binary.version}</artifactId>
        <version>${akka.http.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-testkit_${scala.binary.version}</artifactId>
        <version>${akka.version}</version>
      </dependency>

      <!-- Testkit for Akka Http-->
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-http-testkit_${scala.binary.version}</artifactId>
        <version>${akka.http.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- JSON4S -->
      <dependency>
        <groupId>org.json4s</groupId>
        <artifactId>json4s-jackson_${scala.binary.version}</artifactId>
        <version>${json4s.version}</version>
      </dependency>
      <dependency>
        <groupId>org.json4s</groupId>
        <artifactId>json4s-ext_${scala.binary.version}</artifactId>
        <version>${json4s.version}</version>
      </dependency>

      <!-- Mongo Scala Driver -->
      <dependency>
        <groupId>org.mongodb.scala</groupId>
        <artifactId>mongo-scala-driver_${scala.binary.version}</artifactId>
        <version>${mongo.driver.version}</version>
      </dependency>

      <!-- Embedded MongoDB -->
      <dependency>
        <groupId>de.flapdoodle.embed</groupId>
        <artifactId>de.flapdoodle.embed.mongo</artifactId>
        <version>${mongo.embedded.version}</version>
      </dependency>

      <!-- onFHIR.io -->
      <dependency>
        <groupId>io.onfhir</groupId>
        <artifactId>onfhir-path</artifactId>
        <version>${onfhir.version}</version>
        <exclusions>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.zeroturnaround</groupId>
        <artifactId>zt-zip</artifactId>
        <version>${zt.zip.version}</version>
      </dependency>

      <!-- Unit Testing -->
      <dependency>
        <groupId>org.specs2</groupId>
        <artifactId>specs2-junit_${scala.binary.version}</artifactId>
        <version>${specs2.version}</version>
        <scope>provided</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>xtest</id>
      <properties>
        <maven.test.skip>true</maven.test.skip>
      </properties>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>oss-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

</project>
